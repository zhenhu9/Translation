6.1 Invoking Bash

6.1 调用 Bash

bash [long-opt] [-ir] [-abefhkmnptuvxdBCDHP] [-o option]
    [-O shopt_option] [argument …]
bash [long-opt] [-abefhkmnptuvxdBCDHP] [-o option]
    [-O shopt_option] -c string [argument …]
bash [long-opt] -s [-abefhkmnptuvxdBCDHP] [-o option]
    [-O shopt_option] [argument …]

All of the single-character options used with the set builtin (see The Set Builtin) can be used as options when the shell is invoked. In addition, there are several multi-character options that you can use. These options must appear on the command line before the single-character options to be recognized.

所有 set 内置程序（参见 Set 内置程序）使用的单字符选项都可以在调用 shell 时作为 shell 的选项。此外，你还可以使用几个多字符选项。这些选项必须先于单字符选项出现在命令行中，才能被识别。

--debugger

    Arrange for the debugger profile to be executed before the shell starts. Turns on extended debugging mode (see The Shopt Builtin for a description of the extdebug option to the shopt builtin).

    在 shell 启动前执行调试器配置文件。开启扩展调试模式（有关 shopt 内置程序 extdebug 选项的说明，请参阅 Shopt 内置程序）。

--dump-po-strings

    A list of all double-quoted strings preceded by ‘$’ is printed on the standard output in the GNU gettext PO (portable object) file format. Equivalent to -D except for the output format.

    以 GNU gettext PO（portable object）文件格式在标准输出中打印所有以 ‘$’ 开头的双引号字符串列表。除输出格式外，等同于 -D。

--dump-strings

    Equivalent to -D.

    等同 -D。

--help

    Display a usage message on standard output and exit successfully.

    在标准输出上显示使用信息并成功退出。

--init-file filename
--rcfile filename

    Execute commands from filename (instead of ~/.bashrc) in an interactive shell.

    在交互式 shell 中执行文件名（而不是 ~/.bashrc）中的命令。

--login

    Equivalent to -l.

    等同 -l。

--noediting

    Do not use the GNU Readline library (see Command Line Editing) to read command lines when the shell is interactive.

    当 shell 处于交互状态时，不使用 GNU Readline 库（请参阅 Command Line Editing）来读取命令行。

--noprofile

    Don’t load the system-wide startup file /etc/profile or any of the personal initialization files ~/.bash_profile, ~/.bash_login, or ~/.profile when Bash is invoked as a login shell.

    当 Bash 作为登录 shell 被调用时，不要加载系统启动文件 /etc/profile 或任何个人初始化文件 ~/.bash_profile、~/.bash_login 或 ~/.profile。

--norc

    Don’t read the ~/.bashrc initialization file in an interactive shell. This is on by default if the shell is invoked as sh.

    在交互式 shell 中不读取 ~/.bashrc 初始化文件。如果 shell 以 sh 形式调用，则默认开启此选项。

--posix

    Change the behavior of Bash where the default operation differs from the POSIX standard to match the standard. This is intended to make Bash behave as a strict superset of that standard. See Bash POSIX Mode, for a description of the Bash POSIX mode.

    更改默认操作与 POSIX 标准不同的 Bash 行为，使其与 POSIX 标准一致。这样做的目的是让 Bash 严格遵照该标准行事。有关 Bash POSIX 模式的描述，请参阅 Bash POSIX 模式。

--restricted

    Make the shell a restricted shell (see The Restricted Shell).

    将 shell 设为受限 shell（请参阅 "受限 shell"）

--verbose

    Equivalent to -v. Print shell input lines as they’re read.

    等同于 -v。在读取 shell 输入行时将其打印出来。

--version

    Show version information for this instance of Bash on the standard output and exit successfully.

    在标准输出上显示此 Bash 实例的版本信息并成功退出。

There are several single-character options that may be supplied at invocation which are not available with the set builtin.

调用时可以使用的几个单字符选项，而 set 内置程序则无法提供这些选项。

-c

    Read and execute commands from the first non-option argument command_string, then exit. If there are arguments after the command_string, the first argument is assigned to $0 and any remaining arguments are assigned to the positional parameters. The assignment to $0 sets the name of the shell, which is used in warning and error messages.

    读取并执行第一个非选项参数 command_string 中的命令，然后退出。如果 command_string 之后有参数，第一个参数会赋值给 $0，其余参数会赋值给位置参数。赋值给 $0 会设置 shell 的名称，在警告和错误信息中使用。

-i

    Force the shell to run interactively. Interactive shells are described in Interactive Shells.

    强制 shell 以交互方式运行。交互式 shell 在  Interactive Shells 中有所描述。

-l

    Make this shell act as if it had been directly invoked by login. When the shell is interactive, this is equivalent to starting a login shell with ‘exec -l bash’. When the shell is not interactive, the login shell startup files will be executed. ‘exec bash -l’ or ‘exec bash --login’ will replace the current shell with a Bash login shell. See Bash Startup Files, for a description of the special behavior of a login shell.

    使该 shell 就像被 login 直接调用一样。如果 shell 是交互式的，这相当于用 ‘exec -l bash’ 启动登录 shell。当 shell 是非交互式时，将执行登录 shell 启动文件。‘exec bash -l’ 或 ‘exec bash --login’ 将用 Bash 登录 shell 替换当前 shell。有关登录 shell 特殊行为的描述，请参阅 Bash 启动文件。

-r

    Make the shell a restricted shell (see The Restricted Shell).

    将 shell 设为受限 shell（请参阅 "受限 shell"）。

-s

    If this option is present, or if no arguments remain after option processing, then commands are read from the standard input. This option allows the positional parameters to be set when invoking an interactive shell or when reading input through a pipe.

    如果该选项出现，或者选项处理后没有参数，那么命令将从标准输入端读取。该选项允许在调用交互式 shell 或通过管道读取输入时设置位置参数。

-D

    A list of all double-quoted strings preceded by ‘$’ is printed on the standard output. These are the strings that are subject to language translation when the current locale is not C or POSIX (see Locale-Specific Translation). This implies the -n option; no commands will be executed.

    所有以’$‘ 开头的双引号字符串的列表将打印在标准输出上。当当前本地语言不是 C 或 POSIX 时，这些字符串需要进行语言转换（请参阅 Locale-Specific Translation）。这意味着需要使用 -n 选项，否则不会执行任何命令。

[-+]O [shopt_option]

    shopt_option is one of the shell options accepted by the shopt builtin (see The Shopt Builtin). If shopt_option is present, -O sets the value of that option; +O unsets it. If shopt_option is not supplied, the names and values of the shell options accepted by shopt are printed on the standard output. If the invocation option is +O, the output is displayed in a format that may be reused as input.

    shopt_option 是 shopt 内置程序接受的 shell 选项之一（参见 Shopt 内置程序）。如果存在 shopt_option，-O 会设置该选项的值；+O 则取消设置。如果没有提供 shopt_option，shopt 接受的 shell 选项的名称和值将打印在标准输出上。如果调用选项为 +O，输出将以可作为输入的格式显示。

--

    A -- signals the end of options and disables further option processing. Any arguments after the -- are treated as filenames and arguments.

    一个 -- 表示选项结束，并禁止进一步的选项处理。在 -- 后面的任何参数都被视为文件名和参数。

A login shell is one whose first character of argument zero is ‘-’, or one invoked with the --login option.

登录 shell 是指参数 0 的第一个字符为 ’-‘ 的 shell，或者使用 --login 选项调用的 shell。

An interactive shell is one started without non-option arguments, unless -s is specified, without specifying the -c option, and whose input and output are both connected to terminals (as determined by isatty(3)), or one started with the -i option. See Interactive Shells, for more information.

交互式 shell 是指除非指定了 -s，否则启动时没有非选项参数，也没有指定 -c 选项，并且输入和输出都连接到终端（由 isatty(3) 决定），或者使用 -i 选项启动的 shell。更多信息，请参阅交互式外壳。

If arguments remain after option processing, and neither the -c nor the -s option has been supplied, the first argument is assumed to be the name of a file containing shell commands (see Shell Scripts). When Bash is invoked in this fashion, $0 is set to the name of the file, and the positional parameters are set to the remaining arguments. Bash reads and executes commands from this file, then exits. Bash’s exit status is the exit status of the last command executed in the script. If no commands are executed, the exit status is 0.

如果选项处理后仍有参数，并且没有提供-c或-s选项，第一个参数将被假定为包含shell命令的文件名（参见Shell脚本）。以这种方式调用 Bash 时，$0 将被设置为文件名，位置参数将被设置为其余参数。Bash 从文件中读取并执行命令，然后退出。Bash 的退出状态是脚本中最后执行的命令的退出状态。如果没有执行任何命令，则退出状态为 0。
