3.6 Redirections

3.6 重定向

Before a command is executed, its input and output may be redirected using a special notation interpreted by the shell. Redirection allows commands’ file handles to be duplicated, opened, closed, made to refer to different files, and can change the files the command reads from and writes to. Redirection may also be used to modify file handles in the current shell execution environment. The following redirection operators may precede or appear anywhere within a simple command or may follow a command. Redirections are processed in the order they appear, from left to right.

在执行命令之前，可以使用 shell 解释的特殊符号对命令的输入和输出进行重定向。重定向允许复制、打开、关闭命令的文件句柄，使其指向不同的文件，还可以改变命令读取和写入的文件。重定向还可用于修改当前 shell 执行环境中的文件句柄。下列重定向操作符可以出现在一条简单命令之前或命令中的任何位置，也可以出现在一条命令之后。重定向按从左到右的顺序处理。

Each redirection that may be preceded by a file descriptor number may instead be preceded by a word of the form {varname}. In this case, for each redirection operator except >&- and <&-, the shell will allocate a file descriptor greater than 10 and assign it to {varname}. If >&- or <&- is preceded by {varname}, the value of varname defines the file descriptor to close. If {varname} is supplied, the redirection persists beyond the scope of the command, allowing the shell programmer to manage the file descriptor’s lifetime manually. The varredir_close shell option manages this behavior (see The Shopt Builtin).

在每个重定向操作前，可以用文件描述符编号代替 {varname} 格式的单词。在这种情况下，除了 >&- 和 <&- 以外，shell 会为每个重定向操作符分配一个大于 10 的文件描述符，并将其分配给 {varname}。如果在 >&- 或 <&- 之前有 {varname}，varname 的值将定义要关闭的文件描述符。如果提供了 {varname}，则重定向会持续到命令范围之外，允许 shell 程序员手动管理文件描述符的生命周期。varredir_close shell 选项可以管理这种行为（参见 Shopt Builtin）。

In the following descriptions, if the file descriptor number is omitted, and the first character of the redirection operator is ‘<’, the redirection refers to the standard input (file descriptor 0). If the first character of the redirection operator is ‘>’, the redirection refers to the standard output (file descriptor 1).

在以下描述中，如果省略了文件描述符编号，且重定向操作符的第一个字符为 “<”，则重定向指向标准输入（文件描述符 0）。如果重定向操作符的第一个字符是 “>”，则重定向指向标准输出（文件描述符 1）。

The word following the redirection operator in the following descriptions, unless otherwise noted, is subjected to brace expansion, tilde expansion, parameter expansion, command substitution, arithmetic expansion, quote removal, filename expansion, and word splitting. If it expands to more than one word, Bash reports an error.

在以下描述中，除非另有说明，否则重定向运算符后面的词会受到括号扩展、波浪号扩展、参数扩展、命令替换、算术扩展、引号移除、文件名扩展和词分拆的影响。如果扩展为一个以上的词，Bash 将报错。

Note that the order of redirections is significant. For example, the command

请注意，重定向的顺序很重要。例如，命令

ls > dirlist 2>&1

directs both standard output (file descriptor 1) and standard error (file descriptor 2) to the file dirlist, while the command

将标准输出（文件描述符 1）和标准错误（文件描述符 2）都指向文件 dirlist，而命令

ls 2>&1 > dirlist

directs only the standard output to file dirlist, because the standard error was made a copy of the standard output before the standard output was redirected to dirlist.

只将标准输出定向到文件 dirlist，因为在标准输出被重定向到 dirlist 之前，标准错误是标准输出的副本。

Bash handles several filenames specially when they are used in redirections, as described in the following table. If the operating system on which Bash is running provides these special files, bash will use them; otherwise it will emulate them internally with the behavior described below.

当在重定向中使用一些文件名时，Bash 会对它们进行特殊处理，如下表所述。如果运行 Bash 的操作系统提供了这些特殊文件，bash 将使用它们；否则，它将在内部用下面描述的行为来模拟它们。

/dev/fd/fd    If fd is a valid integer, file descriptor fd is duplicated.
/dev/fd/fd    如果 fd 是有效整数，文件描述符 fd 将被复制。

/dev/stdin    File descriptor 0 is duplicated.
/dev/stdin    文件描述符 0 被复制。


/dev/stdout    File descriptor 1 is duplicated.
/dev/stdout    文件描述符 1 被复制。

/dev/stderr    File descriptor 2 is duplicated.
/dev/stderr    文件描述符 2 被复制。

/dev/tcp/host/port    If host is a valid hostname or Internet address, and port is an integer port number or service name, Bash attempts to open the corresponding TCP socket.
/dev/tcp/host/port    如果 host 是有效的主机名或互联网地址，port 是整数端口号或服务名，Bash 会尝试打开相应的 TCP 套接字。

/dev/udp/host/port    If host is a valid hostname or Internet address, and port is an integer port number or service name, Bash attempts to open the corresponding UDP socket.
/dev/udp/host/port    如果 host 是有效的主机名或 Internet 地址，端口是整数端口号或服务名，Bash 会尝试打开相应的 UDP 插口。

A failure to open or create a file causes the redirection to fail.
打开或创建文件失败会导致重定向失败。

Redirections using file descriptors greater than 9 should be used with care, as they may conflict with file descriptors the shell uses internally.
使用大于 9 的文件描述符进行重定向时应小心，因为它们可能与 shell 内部使用的文件描述符相冲突。

- Redirecting Input
- Redirecting Output
- Appending Redirected Output
- Redirecting Standard Output and Standard Error
- Appending Standard Output and Standard Error
- Here Documents
- Here Strings
- Duplicating File Descriptors
- Moving File Descriptors
- Opening File Descriptors for Reading and Writing

3.6.1 Redirecting Input

3.6.1 重定向输入

Redirection of input causes the file whose name results from the expansion of word to be opened for reading on file descriptor n, or the standard input (file descriptor 0) if n is not specified.

输入重定向会使单词扩展后的文件名在文件描述符 n 上打开供读取，如果未指定 n，则在标准输入（文件描述符 0）上打开供读取。

The general format for redirecting input is:

重定向输入的一般格式为：

[n]<word

3.6.2 Redirecting Output

3.6.2 重定向输出

Redirection of output causes the file whose name results from the expansion of word to be opened for writing on file descriptor n, or the standard output (file descriptor 1) if n is not specified. If the file does not exist it is created; if it does exist it is truncated to zero size.

输出重定向会将 word 扩展后的文件名在文件描述符 n 上打开供写入，如果未指定 n，则在标准输出（文件描述符 1）上打开供写入。如果文件不存在，则创建该文件；如果文件存在，则将其大小截断为零。

The general format for redirecting output is:

重定向输出的一般格式为：

[n]>[|]word

If the redirection operator is ‘>’, and the noclobber option to the set builtin has been enabled, the redirection will fail if the file whose name results from the expansion of word exists and is a regular file. If the redirection operator is ‘>|’, or the redirection operator is ‘>’ and the noclobber option is not enabled, the redirection is attempted even if the file named by word exists.

如果重定向操作符为 “>”，且已启用 set 内置程序的 noclobber 选项，则如果 word 扩展后的文件名存在且是常规文件，重定向将失败。如果重定向操作符为 “>|”，或重定向操作符为 “>”，且未启用 noclobber 选项，则即使以 word 命名的文件存在，也会尝试重定向。

3.6.3 Appending Redirected Output

3.6.3 追加重定向输出

Redirection of output in this fashion causes the file whose name results from the expansion of word to be opened for appending on file descriptor n, or the standard output (file descriptor 1) if n is not specified. If the file does not exist it is created.

以这种方式重定向输出时，将打开 word 扩展后的文件名，以便在文件描述符 n 上进行附加；如果未指定 n，则在标准输出（文件描述符 1）上进行附加。如果文件不存在，则会创建该文件。

The general format for appending output is:

附加输出的一般格式为：

[n]>>word

3.6.4 Redirecting Standard Output and Standard Error

3.6.4 重定向标准输出和标准错误

This construct allows both the standard output (file descriptor 1) and the standard error output (file descriptor 2) to be redirected to the file whose name is the expansion of word.

该结构允许将标准输出（文件描述符 1）和标准错误输出（文件描述符 2）重定向到名称为 word 扩展的文件。

There are two formats for redirecting standard output and standard error:

重定向标准输出和标准错误有两种格式：

&>word

and

>&word

Of the two forms, the first is preferred. This is semantically equivalent to

在这两种形式中，首选第一种。这在语义上等同于

>word 2>&1

When using the second form, word may not expand to a number or ‘-’. If it does, other redirection operators apply (see Duplicating File Descriptors below) for compatibility reasons.

使用第二种形式时，word 可能不会扩展为数字或 “-”。如果扩展为数字或 “-”，出于兼容性考虑，其他重定向操作符也会适用（请参阅下面的复制文件描述符）。

3.6.5 Appending Standard Output and Standard Error

3.6.5 附加标准输出和标准错误

This construct allows both the standard output (file descriptor 1) and the standard error output (file descriptor 2) to be appended to the file whose name is the expansion of word.

该结构允许将标准输出（文件描述符 1）和标准错误输出（文件描述符 2）附加到名称为 word 扩展的文件中。

The format for appending standard output and standard error is:

追加标准输出和标准错误的格式为：

&>>word

This is semantically equivalent to

这在语义上等同于

>>word 2>&1

(see Duplicating File Descriptors below).

（请参阅下面的复制文件描述符）。

3.6.6 Here Documents

3.6.6 此处文档

This type of redirection instructs the shell to read input from the current source until a line containing only word (with no trailing blanks) is seen. All of the lines read up to that point are then used as the standard input (or file descriptor n if n is specified) for a command.

这种类型的重定向指示 shell 从当前源读取输入，直到看到一行只包含词元（无尾部空白）为止。在此之前读取的所有行将被用作命令的标准输入（或文件描述符 n，如果指定了 n）。

The format of here-documents is:

here-documents 的格式为：

[n]<<[-]word
        here-document
delimiter

No parameter and variable expansion, command substitution, arithmetic expansion, or filename expansion is performed on word. If any part of word is quoted, the delimiter is the result of quote removal on word, and the lines in the here-document are not expanded. If word is unquoted, all lines of the here-document are subjected to parameter expansion, command substitution, and arithmetic expansion, the character sequence \newline is ignored, and ‘\’ must be used to quote the characters ‘\’, ‘$’, and ‘`’.

不对 word 执行参数和变量扩展、命令替换、算术扩展或文件名扩展。如果 word 的任何部分带引号，则分隔符是删除 word 中引号的结果，此处文档中的行不进行扩展。如果 word 未加引号，则 here-document 中的所有行都将执行参数扩展、命令替换和算术扩展，字符序列 \newline 将被忽略，并且必须使用 “\” 来引用字符 “\”、“$” 和 “`”。

If the redirection operator is ‘<<-’, then all leading tab characters are stripped from input lines and the line containing delimiter. This allows here-documents within shell scripts to be indented in a natural fashion.

如果重定向操作符为 “<<-”，则会从输入行和包含分隔符的行中去掉所有前导制表符。这样，shell 脚本中的此处文档就能以自然的方式缩进。

3.6.7 Here Strings

3.6.7 Here 字符串

A variant of here documents, the format is:

here 文档的一种变体，格式为：

[n]<<< word

The word undergoes tilde expansion, parameter and variable expansion, command substitution, arithmetic expansion, and quote removal. Filename expansion and word splitting are not performed. The result is supplied as a single string, with a newline appended, to the command on its standard input (or file descriptor n if n is specified).

word 会进行转折号扩展、参数和变量扩展、命令替换、算术扩展和删除引号。不执行文件名扩展和单词拆分。结果将以单个字符串的形式提供给命令的标准输入（或文件描述符 n，如果指定了 n），并加上换行符。

3.6.8 Duplicating File Descriptors

3.6.8 复制文件描述符

The redirection operator

重定向操作符

[n]<&word

is used to duplicate input file descriptors. If word expands to one or more digits, the file descriptor denoted by n is made to be a copy of that file descriptor. If the digits in word do not specify a file descriptor open for input, a redirection error occurs. If word evaluates to ‘-’, file descriptor n is closed. If n is not specified, the standard input (file descriptor 0) is used.

用于复制输入的文件描述符。如果 word 扩展到一个或多个数字，则 n 表示的文件描述符将成为该文件描述符的副本。如果 word 中的数字没有指定打开供输入的文件描述符，则会出现重定向错误。如果 word 的值为 “-”，文件描述符 n 将被关闭。如果没有指定 n，则使用标准输入（文件描述符 0）。

The operator

运算符

[n]>&word

is used similarly to duplicate output file descriptors. If n is not specified, the standard output (file descriptor 1) is used. If the digits in word do not specify a file descriptor open for output, a redirection error occurs. If word evaluates to ‘-’, file descriptor n is closed. As a special case, if n is omitted, and word does not expand to one or more digits or ‘-’, the standard output and standard error are redirected as described previously.

的用法与复制输出文件描述符类似。如果未指定 n，则使用标准输出（文件描述符 1）。如果 word 中的数字没有指定打开用于输出的文件描述符，则会发生重定向错误。如果 word 的值为 “-”，文件描述符 n 将被关闭。作为一种特殊情况，如果省略了 n，且 word 没有扩展为一个或多个数字或 “-”，则标准输出和标准错误将按前述方式重定向。

3.6.9 Moving File Descriptors

3.6.9 移动文件描述符

The redirection operator

重定向运算符

[n]<&digit-

moves the file descriptor digit to file descriptor n, or the standard input (file descriptor 0) if n is not specified. digit is closed after being duplicated to n.

将文件描述符 digit 移至文件描述符 n，如果未指定 n，则移至标准输入（文件描述符 0）。

Similarly, the redirection operator

同样，重定向操作符

[n]>&digit-

moves the file descriptor digit to file descriptor n, or the standard output (file descriptor 1) if n is not specified.

将文件描述符 digit 移至文件描述符 n，如果未指定 n，则移至标准输出（文件描述符 1）。

3.6.10 Opening File Descriptors for Reading and Writing

3.6.10 打开文件描述符供读写

The redirection operator

重定向操作符

[n]<>word

causes the file whose name is the expansion of word to be opened for both reading and writing on file descriptor n, or on file descriptor 0 if n is not specified. If the file does not exist, it is created.

会使名称为 word 扩展的文件在文件描述符 n 上打开供读写，如果未指定 n，则在文件描述符 0 上打开。如果文件不存在，则将创建该文件。
