   Arithmetic Expansion			算术扩展
       Arithmetic expansion allows the evaluation of an arithmetic  expression
       and  the  substitution of the result.  The format for arithmetic expan-
       sion is:

	算术扩展允许算术表达式计算和替换结果。 算术扩展的格式是：

              $((expression))

       The expression is treated as if it were within  double  quotes,  but  a
       double  quote  inside  the  parentheses  is not treated specially.  All
       tokens in the expression undergo parameter expansion, string expansion,
       command  substitution, and quote removal.  Arithmetic expansions may be
       nested.

	该表达式就像在双引号内，但括号内的双引号不被特别对待。 表达式中的所有词元都经行参数扩展，字符串扩展，命令替换和引用删除。 算术扩展可以嵌套。

       The evaluation is performed according to the rules listed  below  under
       ARITHMETIC EVALUATION.  If expression is invalid, bash prints a message
       indicating failure and no substitution occurs.

	计算根据 ARITHMETIC EVALUATION 下列出的规则执行。 如果表达式无效，bash 将打印一条表示失败的消息，并且不会发生替换。

   Process Substitution			进程替换
       Process substitution is supported on systems that support  named  pipes
       (FIFOs)  or the /dev/fd method of naming open files.  It takes the form
       of <(list) or >(list).  The process list is run with its input or  out-
       put connected to a FIFO or some file in /dev/fd.  The name of this file
       is passed as an argument to the current command as the  result  of  the
       expansion.   If the >(list) form is used, writing to the file will pro-
       vide input for list.  If the <(list) form is used, the file  passed  as
       an argument should be read to obtain the output of list.

	支持命名管道 (FIFOs) 或 /dev/fd 命名方法打开文件的系统支持进程替换。 它采用 <(list) 或 >(list) 的形式。 运行进程列表时，其输入或输出连接到 FIFO 或 /dev/fd 中的某个文件。 作为扩展的结果，此文件的名称作为参数传递给当前命令。 如果使用 >(list) 形式，则写入文件将为列表提供输入。 如果使用 <(list) 形式，则应读取作为参数传递的文件以获取列表的输出。

       When  available,  process substitution is performed simultaneously with
       parameter and variable expansion, command substitution, and  arithmetic
       expansion.

	可用时，进程替换与参数和变量扩展，命令替换和算术扩展同时执行。
